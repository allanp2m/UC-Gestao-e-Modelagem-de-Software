Tabela Comparativa – Falha X Causa X Prevenção

| Falha                                                                             | Causa                                                                                                                          | Prevenção                                                                                                                                                        |
| --------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Ariane 5 (1996) – Explosão do foguete 37s após o lançamento.                      | Erro de conversão numérica (overflow ao converter 64 bits → 16 bits), software do Ariane 4 reutilizado sem adaptação.          | Revisão de requisitos para novos limites, testes em cenários extremos, validação numérica em variáveis críticas, auditoria independente do software reutilizado. |
| Therac-25 (anos 80) – Pacientes receberam doses fatais de radiação.               | Software não verificava a posição da placa metálica; ausência de revisão/testes independentes; mensagens de erro pouco claras. | Revisão e testes independentes, redundância em subsistemas críticos, validação de requisitos de segurança, documentação clara, treinamento de operadores.        |
| Bug do Ano 2000 (Y2K) – Risco global de falha em sistemas.                        | Armazenamento de anos com 2 dígitos; falta de previsão da virada do século; dependência de sistemas legados.                   | Auditoria de sistemas legados, uso de 4 dígitos para anos, testes de datas futuras, planos de contingência e backups.                                            |
| Knight Capital (2012) – Perdeu US\$ 440 milhões em 45 minutos.                    | Código novo mal testado; módulos antigos ativos em paralelo; ausência de redundância e checagem em produção.                   | Testes rigorosos pré-deploy, validação de compatibilidade com sistemas legados, monitoramento em tempo real, plano de rollback rápido.                           |
| Toyota (2009-2011) – Aceleração involuntária em milhões de veículos.              | Bug no software do acelerador eletrônico (ETCS); falhas mecânicas combinadas; testes de integração insuficientes.              | Revisão rigorosa do software embarcado, testes extensivos de integração, monitoramento e alertas de falhas, recall proativo.                                     |
| Uber (2022) – Invasão hacker comprometeu sistemas internos.                       | Ataque de “MFA fatigue”; credenciais vazadas; falta de bloqueio para múltiplas tentativas; baixo nível de conscientização.     | Treinamentos em segurança, melhorias no MFA (limites e alertas), monitoramento de acessos suspeitos, auditoria periódica de credenciais.                         |
| Google Docs (2017) – Textos trocados/excluídos em tempo real.                     | Bug na sincronização em edição colaborativa; conflitos no auto salvamento; falhas na lógica de merge.                          | Melhorias no sistema de sincronização, testes intensivos de colaboração simultânea, logs/avisos de conflito, recuperação de versões anteriores.                  |
| Apple Maps (2012) – Mapas distorcidos, rotas incorretas e dados absurdos.         | Dados cartográficos imaturos; lançamento apressado; falta de validação em campo; problemas de integração.                      | Validação rigorosa de dados, testes em larga escala, lançamento gradual, atualizações rápidas após feedback.                                                     |
| Caixa eletrônico NAB (2011) – Usuário sacou mais do que possuía.                  | Delay na atualização de saldo; erros de sincronização; ausência de limites/alertas; sistemas legados frágeis.                  | Atualização e auditoria de software, monitoramento em tempo real, limites automáticos de saque, testes em edge cases.                                            |
| Magazine Luiza (2019) – Cupons liberaram descontos indevidos de R\$ 1.000.        | Erro técnico no sistema de cupons; validação insuficiente de regras; falta de testes em cenários reais.                        | Validação rigorosa de promoções, testes intensivos em múltiplos cenários, monitoramento de descontos em tempo real, rollout gradual.                             |
| Erros de tradução (2000–2025) – Traduções automáticas viraram piadas globais.     | Uso de tradução automática sem revisão humana; falta de contexto cultural; testes insuficientes de localização.                | Revisão humana das traduções, testes de localização antes do lançamento, validação cultural das strings, integração com QA de idiomas.                           |
